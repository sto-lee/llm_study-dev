{
  "video_url": "https://www.youtube.com/watch?v=bvVgP4tw_Hc",
  "video_id": "bvVgP4tw_Hc",
  "title": "Observability Explained with LogDNA",
  "upload_date": "20200218",
  "channel": "IBM Technology",
  "duration": "8:15",
  "caption": "As your applications grow in complexity\nhow do you harness and drive new insights from all the chaos? And is\nobservability just a buzzword, or is it something that you actually need to\nthink about? Spoiler alert, it is. My name is Sai Vennam and I'm with the IBM Cloud\nteam, and today I'm joined with a special guest. Hi there, I'm Laura Santamar√≠a and\nI am a Developer Advocate with LogDNA. If you don't know LogDNA is a core part\nof our observability story on IBM Cloud, but today we're gonna be talking about\nobservability, so let's start with definition. So observability is a\nproperty of your systems that helps you understand what's going on with them,\nmonitor what they're doing, and be able to get the information you need to\ntroubleshoot. So the way we see it there's three major tears of\nobservability and let's go through those now. We're gonna start out with my favorite\nwhich is logging. In addition to logging we additionally have metrics, so that's\njust all of your analytics around all of the data that you're gathering and\nfinally...we've got monitoring. Now monitoring is essentially putting up a\nmagnifying glass to your systems and getting new insights from what's\nactually running there. Today we're gonna be starting with an example, in the\nbottom left corner we have sketched out a few of the different infrastructure\npieces so we'll start with today. Can we explain what those are? Sure, we have a\npublic cloud, it can be any of them. And then you have on-prem, and then let's say we\nactually have some user data, maybe this is a tablet or a cell phone. So all of\nthose infrastructure pieces are creating and generating data and what I'm kind of\ngonna focus on here is the personas that are going to consume them. So we've got\nthat Dev persona, we've got Ops, and finally we have Security. So, all of\nthis data flowing in is kind of a lot, I want to have some way of filtering it\ndown for my specific user personas to be able to understand it. So let's start\nwith developers, what do developers care about? I actually\nwant to back up here for a moment though because let's talk about all the\ndifferent levels that logging can come from. So we have three different levels\nthat we can think about so you have your Operating System, you have Kubernetes or\nany other type of platform, so I'm picking kubernetes. That's my favorite. And\nthen finally your application. So your operating system and kubernetes all send\nreally good logs and you can use a lot of that data pretty much as this, or add\nin some of your own but applications is really where you need to spend some time.\nSo you're devs need to create a proper event stream and this really goes by the\ngarbage in, garbage out system where you really need to put in good work and get\nsome good data on the side of the application so that you get good logs\nout. Right, exactly, so the great developers out there on kubernetes and\nthe operating Systems they've instrumented their platforms but the\napplication that's up to you as a developer to make sure the\ninstrumentation is in place. Absolutely, and when you think about it, let's say\nthat we have an operating system here and I'm gonna say that's an operating\nsystem, and then we have kubernetes running on it. And then you actually have\nyour app running on top of kubernetes. And all of these are to each sending\ndata. So we have three different levels of data all coming out and trying to\ncome towards the dev that wants some information. Right, so it looks like\nthey're all coming into this central area here. That's right. We can talk about\nthis is our aggregator. So our aggregator takes in all of this\ndata and puts it all into one place so we can work with it. That's right, but\nkind of coming back to the the problem here a\ndeveloper might not care about all of the information flowing in, how do we\ndrive just the pieces that they care about like we mentioned? Maybe they\ninstrumented their specific application, how do we drive that to them? Absolutely,\nso an aggregator often has filters. So in this case let's say the dev is just\nasking for data about debugging and just some information there, and your data,\nyour filter can actually set up a dashboard or some other way of accessing\nall of that data that the dev can take a look at just the pieces that they need.\nThat's a core part of a observability solution, this aggregator not only does\nit collect the data but it needs to externalize it, expose it, so my\ndevelopers can access it and drive new insights. So let's say we solved that\npart of the puzzle, what do operators care about? What are\nthe operations teams? What are they looking for out of these systems? So an\noperations team might need to know more about degradation of its system, or if a\npod is falling over,  maybe your database filled up and you need to know more\ninformation about how you can fix it. The ops teams is going to be getting\ndata from all of these different systems and filtering it out to yet another\ndashboard or another interface of some sort and getting that data just what\nthey need. Right, so potentially they may not care as much about specific\napplication level logs but they'll be looking to kubernetes to say hey what\nwas the CPU usage, do we need to set up some horizontal pod auto scalers to make\nsure that we don't hit those limits. Finally, kind of probably see where I'm\ngoing here with the last piece of the puzzle with security, they probably have\na dashboard that's created for them as well. So a security team let's say\nthey're using a third-party tool as most security teams generally, do they\nidentify a threat ID, or maybe a customer ID and they want to dive in deeper to a\npotential threat that's been identified. So they put that information in the\naggregator and they can identify and make kind of sense of all the chaos to\nidentify exactly what that specific security analyst might be looking for.\nBut I want to pose an interesting question here, it's not always about\ngoing to the system and identifying what's there,\nmany times security advisors need to know what's happening the second it\nhappens and they can't just sit there and stare at logs all day, right.\nAbsolutely, this is where monitoring comes in, this is really a two-way street.\nWe have automated alerts that can go out and tell all of these different groups\nabout specific things that they're interested in, specific events that they\nwant to know about. So let's say that you have a system that's been accessed and\nit's not supposed to be frankly that system is going to figure it out long\nbefore a human is and that's what an alert is for an ops team doesn't want to\nfind out that there's a degradation of service when their user does, they need\nto know ahead of time. So a good observability solution should have the\nability to externalize the data and then additionally set up a learning on top of\nthat. So our dev team may be their most comfortable in Slack, so they set up a\nchat bot so that particular exceptions when they're thrown they're able to know\nwhen they happen. Your ops team may be they were using something like a paging\nsystem so that you know in the middle of the night if something goes down they\nget alert and they can start looking into it right away. And then finally for\nour security teams, kind of as I mentioned, they're generally using you\nknow maybe third party tools or custom dashboards they can set up custom\nalerting so they can know exactly when something goes down. And to be honest\nthis is your new norm, you're going to have multiple clouds, you're going to\nhave on-premise systems, you're going to have data coming directly in from your\nusers. You need to be able to understand what's going on and really this is what\nobservability is all about. Thanks for joining us for this quick overview of\nobservability, also thank you so much for joining us today Laura. Absolutely, my\npleasure. If you have any questions please drop us a line below. If you want\nto see more videos like this in the future, please like and subscribe. And\ndon't forget you can always get started on the cloud at no cost by signing up\nfor a free IBM Cloud account."
}