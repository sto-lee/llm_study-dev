{
  "video_url": "https://www.youtube.com/watch?v=O-XBhVv2pgE",
  "video_id": "O-XBhVv2pgE",
  "title": "What is Cloud Storage?",
  "upload_date": "20211220",
  "channel": "IBM Technology",
  "duration": "8:54",
  "caption": "Hi there, and thank you for joining us today. My name is Bradley Knapp and I'm from IBM and we're answering basic questions about cloud and cloud computing and computing in general. And the question that we're answering today is what is cloud storage? Now I want to make a quick caveat here as the answer that I'm going to give is specific to the enterprise style of computing that is really IBM's bailiwick. We're going to be talking about cloud concepts as they apply to the enterprise. Now, we are going to look at the consumer products here at the end of the video and tie them back in. But this is very specifically what is enterprise cloud storage. So starting off, what is cloud storage? And throw a little question mark on it. So there are two important distinctions in cloud storage. Two primary branches, if you will, right? The first one we're going to put over here and this is ephemeral storage. What is ephemeral storage? Well, \"ephemeral\" means \"fleeting\", it means that it doesn't stay around forever. Ephemeral exists whenever you have a virtual server that is up and running, and the ephemeral storage is attached to it, but when that virtual server goes away, either because you cancel it or because the underlying host crash or something else goes wrong, you will lose everything that is running in that ephemeral storage. It's great for a scratch disk, it's great for a local disk. It's great for putting things that you need a temporary home for. It's great for a temporary home for log files because ephemeral storage is often very, very highly performant. Ephemeral storage almost always is physically attached to the host that a virtual server is running on. And because of that, you get a whole lot of performance for relatively low cost because, again, it's ephemeral. When the virtual server goes away, so does the storage. Well, what happens if you want to keep that storage when the server goes away? That's when you get over here into our other side, which is persistent. Persistent storage is that that persists, it continues to exist, even when a virtual server isn't attached to it. Now, persistent storage comes in lots of different flavors, lots of different mounting points and things like that. But I'm going to break it up into three fundamental pieces, right? So the first piece is going to be block. The second piece is going to be file. And then the third piece is going to be object because these are far and away the most common kinds of cloud storage. Block, file, object. Each has its own underlying technologies. The way that block mounts to a device is different from how file mounts to a device, object doesn't actually mount to a device at all. Object storage you interact with it via an API, whereas a block storage device, generally speaking, you attach that to the virtual server through the hypervisor. Now you can attach and detach block file shares whenever you need to, but it goes through that hypervisor layer. Again, this is generally speaking, it doesn't have to be done that way, but it's generally done that way. File storage, on the other hand, is generally attached directly to your virtual server. You mount it via a mount point. File is useful because you can do a file share highly available between two different machines where you've got a primary and a secondary. And whenever the primary machine has a problem, you can lock the file share on it, unlock it on the secondary machine, and you fail over and you still have data integrity. And then object. Object storage is great for buckets of items, which is a little bit of a joke because that's what you store objects in in an object storage array, you put them into buckets. And so object storage is where you're going to host things like videos. That's where you're going to put text content. It's not as highly performant. So if you're talking about a database, you're never going to run a database on object storage. Databases go in file storage, they go in block storage. But for hosting objects like photos, like text, graphics, icons, anything that gets read but doesn't have real performance limitations on how quickly it gets out, that can go into object storage. Now, in the world of cloud, how does this stuff get billed? It gets billed in two ways. One is: how much of it do you use? And the other is: how much performance do you need? So how much of it you use, it's gigabytes, right? You get billed a set number of cents per gigabyte per month. This is true for block. This is true for file. This is true for object. Now, in addition to that, you are also going to pay for performance. The more performance you need and that could be, the higher the IOPS (Input/Output Operations Per Second) you need, or it could be, the more bandwidth that you need in writing to and from. The more performance you require, the more expensive the storage costs. And so you're always looking for a balance between the performance needs of your application, the performance needs of your website, and the cost involved in running the actual infrastructure. Additionally, for object storage, there are some other pricing metrics that have to do with how often you put data into the object storage buckets, how often you retrieve it from the object storage buckets, and also what level of availability you want. Object storage is typically good for both warm and cold storage. If you've got data that you need to keep for legal reasons or other reporting reasons, but you don't think you're ever going to access it, you're just legally required to hang onto it for 5 years, or 7 years, or 20 years, you can put that into a cold storage object bucket at a very, very, very low rate. Dramatically less than block or file or even standard access level object. And then as long as you aren't constantly writing out to it, or writing in from it, you're going to keep that very low rate. Now, I did promise that we would talk very briefly about those consumer storage products, and so we will. And so consumer cloud storage, everybody thinks of that as something like iCloud, right? It could be OneDrive. It could be Dropbox. It could be Google Drive. But this is a consumer service where you have some sort of a web application or a website that is going to give you a place to host files and photographs and things like that, keep your devices in sync with each other. Well, how does this play into cloud storage? Well, the answer is almost every consumer grade cloud storage solution, whether that's iCloud or OneDrive or any other, under the covers, they are actually all the way back here, and you're writing to and from object storage buckets. Even though it doesn't look that way, maybe it looks like a normal file browser to you when you go to the website or when you go to the app, at the end of the day, whether it's iCloud or OneDrive or Dropbox, on the back end it's object storage. Why? Well, because again, if you think about performance needs, what I describe as high performance for an enterprise level application like a database server, and what you describe is high performance, but your application is really just looking at old pictures, they are two entirely different things. The latency that I require from that enterprise database server, that latency is measured in microseconds and in tenths and hundredths of microseconds. When you're looking at old family vacation photos from a few years ago, if you've got to wait three or four seconds for them to display, not that big a deal. And so for those consumer grade services, under the covers its object storage. So hopefully that was helpful. Hopefully, that was useful. As always, if you have any additional questions about cloud storage ask them in the comments. We have other videos that get into the specifics on this channel. We can talk about file storage, we can talk about block storage. If you want to learn way more about the ephemeral storage and what you would use that for, drop us note, let us know. But other than that, thank you so much. Hopefully, this was useful to you, and we'll see later."
}