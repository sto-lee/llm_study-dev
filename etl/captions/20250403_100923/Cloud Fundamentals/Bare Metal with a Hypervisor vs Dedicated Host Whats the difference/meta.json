{
  "video_url": "https://www.youtube.com/watch?v=3xH1SAWWdl0",
  "video_id": "3xH1SAWWdl0",
  "title": "Bare Metal with a Hypervisor vs. Dedicated Host: What's the difference?",
  "upload_date": "20210524",
  "channel": "IBM Technology",
  "duration": "5:21",
  "caption": "Hey there, and thanks for stopping by! My name is Bradley Knapp, and I'm one of the product managers here at IBM Cloud, and the question that we're trying to help you answer today is: what is the difference between a bare metal with \na hypervisor on it and a dedicated host? because the underlying concept is pretty similar, but the exact use-cases are going to be very different. Both bare metals with hypervisors and \ndedicated hosts have advantages.  They also have some disadvantages, and so selecting the right one to solve your workload needs is going to be essential and critical in solving your problems, because even though they do look and act and feel kind of the same, those added benefits, those added drawbacks, they're going to make the decision for you. And so, if we start from the very beginning, we need to think about a cloud compute host, because that's the common element that every compute offering in cloud has. So, on this side we're going to have our bare metal with the hypervisor. On this side we're going to have our dedicated host. And so, let's start out with our actual host. This is the physical compute host with the sockets and the RAM and the processors in the cloud data center that you build on top of. So, we're going to start with our boxes, with either a bare metal with a hypervisor or dedicated host. Those boxes are the same. The underpinning compute is the same. The difference is who runs the hypervisor. On bare metal with the hypervisor, (this is going to be our hypervisor layer up here, HV), that hypervisor is run by you, it's run by the client. It gives you all of the control, all of the tweaking, that you're used to having on-  premises, and so you really can get in and manipulate that \nhypervisor to make the box do whatever you want.\n   Over on our dedicated host side, we again have that hypervisor layer that  stays on top,  but the cloud provider runs this one. And so we're going to apply all of our knowledge, all of our best practices, to this hypervisor. We're going to take that complexity away from you. We're going to take care of that, so that you \ncan focus just on the virtual server instances (VSI). And so, when it comes time to deploy those VSIs on the dedicated host, you just tell us what kind of VSIs and how many you want, and then we schedule them against the hypervisor and place them on it for you. So, you're going to have virtual server 1, virtual server 2, virtual server 3, so on and so forth, until you fill up the box. On the bare metal with the hypervisor side, slightly different concept because, rather than you telling the cloud provider, \"I would like to schedule these\", you're going to take care of all of this yourself. You're going to interact with that hypervisor layer directly \nto schedule those virtual servers yourself. Now, why would you ever want to do this? Well, because it does allow you for greater efficiency. If you want to do what's called \"over-commit\", where \nyou're going to have a single processor thread, but you're going to commit that to several \ndifferent virtual servers to using pooling, so that you can get greater compute capacity by taking advantage of this host, you can do that on a bare metal with a hypervisor. On the dedicated host, we don't have the ability to allow you to control what level of over-commit there is, but when you're on the hypervisor, you make all those decisions yourself. Also, because you have access to this hypervisor, it allows you to do a level of monitoring and a level of logging that, generally speaking, cloud providers don't make available on dedicated hosts. It also allows you to back up your virtual machines directly through that hypervisor layer, plugging into the API of that hypervisor. Whereas, on a dedicated host, if you want to back up a virtual server, you have to use the cloud provider's APIs. So, again with the bare metal with the hypervisor on it, the big benefit is that you have granular control of everything you want to do. You can over-commit VCPUs, you can over commit RAM, you can over schedule the box so, if it normally would only hold 5 VSIs, you can make the decision to put 10 on it. Because you know your workload best, and you can make those decisions. On the dedicated host, because the cloud provider \nis running that hypervisor just like it does   any other hypervisor in the fleet, we're going to \nabstract some of that control away, we're going to take care of that for you. But the benefit that goes along with it is it means that you don't have the added complexity that comes along with managing that bare metal server on your side. So, it really does matter, and the decision point is: how much control do you want? How much control are you willing to give up, and how \nmuch simplicity do you want? Because there's no doubt a dedicated host is a simpler model for you to run than a bare metal with a hypervisor is, but with that simplicity comes a loss of control and a loss of the ability to go in and tinker with each of those individual settings. Thank you so much for your time today. If you have any questions, please drop us a line below. If you want to see more videos like this in the future, please do like and subscribe and let us know. And, don't forget, you can grow your skills and earn a badge with IBM Cloud Labs, which are free, browser-based interactive Kubernetes labs, that you can find more information \non by looking below. Thanks again!"
}