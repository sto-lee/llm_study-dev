Hey there! Thanks for coming out today 
and joining us to learn a little bit   about how you would deploy SAP into the cloud. And I know that this is a terrifying incredibly complicated solution. It's the kind that sends chills and shutters down the back of any CIO who's about to go down this road, but it doesn't have to be. It's a fairly basic process from a conceptual standpoint. It's the execution that's the hard part. And so, how we're going to answer this is 
we're going to go through the logical steps of how you actually go through the process of 
deploying SAP onto the cloud, to try and demystify it, to make it a little more straightforward. So that you, as you're doing all of your planning, can incorporate these steps into figuring out your timelines, figuring out your budgets, but most importantly, hopefully you can take away some advice and some lessons learned from this video so that you don't have to experience the pain that some of our other clients have had over time. And so, when we talk about deploying SAP on the cloud, probably the first and most important part, and arguably the longest part of your process, needs to be number 1 - and that number 1 is you must evaluate your existing landscape. And when you evaluate that that landscape, it's not just a matter of sizing, you know, how big is it today, how big is it going to get in the future - if all you talk is tech, you're missing the boat. The evaluation piece has to be about your business. Moving to the cloud needs to have 
a reason. You don't do it just because it's fun, or just because you've got extra money that you need to spend. You need to define: what are the success criteria? What problems am I solving, and is moving to the cloud going to answer those problems? If you haven't answered those questions yet, don't start on this journey. Work on the business challenge first, because if the only thing you do is move to cloud without addressing any of the other challenges you already have, your cloud migration is never going to be successful. It's only going to add additional difficulty to your life. So, once you've done that evaluation, once you have gotten out, and you've said, "These are our goals, this is what we're going to fix, this is our success criteria, and this is how we're going about it", then it's time to step in and say, "OK, what do we do first?" Well, so working with your system integrator, the first thing you're going to do, is you're going to bring up some Dev systems, right?  So that those Dev systems, these are little. These are not big systems, they're small systems, and the purpose of the Dev systems 
is to do some little baby proofs of concept, right? You're going to do a little POC work, 
you're going to do a little bit of testing on them. You're going to make sure that the  infrastructure that you think you're going to use is going to be successful in the way that you  intend to use it. That's the purpose of Dev. You're also going to start trying to figure out 
how to move all my customizations, how to move all of my data around, because coming from on-premises 
into the cloud is not a trivial challenge. You need to start doing some of your data mapping with these Dev systems, right? How do I get data in, how do I get data out? And so, once you've got your Dev, then it's time to start bringing up the big systems, right? And I'm going to call this "Stage", and the reason that I'm going to call it Stage is because eventually the second set that you bring up this is going to be your staging environment. So, a normal flow would go from Dev 
into Stage. So, your normal SAP progression is going to go from Dev into Stage. And so, as you move forward, once you've got your staging environment up, you've got it stable, this is when you start incorporating all that customization, right? And at this point you might not have one 
Dev environment. You might have 2, you might have 3, you might have 4, but really, it's getting all of your teams involved so that they're all working toward the same goal. So, you've got this Stage environment, you're feeding Dev in, and you say, "OK, well we're ready to really get into some real testing, right?" Well, in that case, we're now going to order what will eventually be, but isn't today, the DR (Distaster Recovery) environment . Because what's the purpose of having a DR if you don't ever actually test it? And so, not only are you going to start moving all of this into your DR environment, but also let's go ahead and do a sync, right? Let's get all that on-premises data that we've got, and let's get it copied into our DR environment. Because, as a DR site, it has to work as production in the event of a disaster, so it has to be the same specs as your production system. So, let's get a full data load into it, and let's start running some actual performance 
testing. Let's start running some actual load on it. Let's start running some actual queries on it to be sure that it does, in fact, solve the problems that you need. Let's also be sure that all of 
our data pathing is right. Let's be sure that it has access to what it needs, and that the data that's flowing to it is flowing to it correctly. Next, once we're happy here, now we're going to move up and we're going to get  our Pre-Prod systems up. So, your Pre-Prod is going to be slightly downsized from production, but the goal is confirmation testing, right? Your eventual flow will be Dev, Stage, Pre-Prod, Prod. But for now, we're going to stop in this DR environment, we're going to do some testing, and we're going to get Pre-Prod stable, right? We're going to get our DevOps path from Dev, to Stage, to Pre-Prod. We're going to get that solid. We're going to be sure that our release process is right. We're going to be sure that our change 
control is right, because then it's time to go up and let's get your production system which is the most important part, right? So, you're going to go up to your Prod system, and since you've got Prod, guess what? Time to bring data in again! So, we're going to get another fresh copy of 
data from our existing on-premises solution,   and we're going to get that loaded into 
production, and then we're going to do   all of our end-to-end testing. All of our user acceptance testing.
All of our criteria. So that we can get to the holy grail of Go Live, and the whole point of getting to Go Live, is this is when you do your cut over, right? You've already done your sync to Prod, so you've just got to get a little delta on your data. Once you get that delta load, you're going to have to take some sort of a downtime outage to cut over into your new production system. Once you have done that, your environment is 
up, it s stable, it's ready to go. At that point you're going to go back into a normal Dev cycle, right, into that continuous integration, continuous release cycle where you're feeding Dev changes into Stage, and you don't have to stop at DR anymore, but your changes in Stage are going to go to Pre-Prod, Pre-Prod into Prod, and then start back again. So, all of this work is going to continue as time goes on, and you're going to be in that wonderful cycle, but that's how you get from on-premises into the cloud, in a way that is 
hopefully solving all of your problems. Thank you so much for 
stopping by the channel today! If you have any questions or comments, 
please feel free to share them with us below. If you enjoyed this video and you would 
like to see more like it in the future,   please do like the video and subscribe to us 
so that we'll know to keep creating for you. If you have any questions about 
evaluating or running SAP on IBM Cloud,   please go to ibm.com/cloud/sap or 
click on the link in the description. We'd love to talk more with you about how we can 
help you solve your SAP on Cloud challenges.