here at ibm we've perfected the process of modernizing legacy applications by working directly with our customers now we picked up some tips and tricks along the way and we wanted to share that with you with the exact approach we take with the ibm garage now today we're going to talk about what's called the ibm garage methodology which we use with our clients to ensure that they're using the latest and greatest cloud technology and accelerating their digital transformation now within any organization there's going to be some of the latest and greatest tools that are being used as well as processes now at the center of all of this is going to be what i call the culture now this is critical to any team taking on a digital transformation and that's because you might be using the latest and greatest tools and implementing the processes but without the actual users and and you know the employees within your company adopting these technologies you're not going to see a successful digital transformation so to enact any sort of transformation you need to start thinking about the culture this means adopting approaches like agile methodologies maybe moving from waterfall techniques so that's some of the things that i'm going to be covering today in the garage methodology and i'd say there's six facets that kind of surround the key of it all that's the culture and the first one that we're going to start with today we'll call it discover now here's when you're identifying key objectives within your organization so for a lot of organizations this can be something like tco or total cost of ownership this is critical cost savings are a big concern for a lot of clients moving to the cloud and in addition understanding what taking advantage of some of these latest and greatest capabilities is going to cost them but it's more than just that it's about understanding objectives of you know what you want to accomplish so say for example your company is growing and you're getting more and more support tickets and your support team just can't handle them well you could throw money at the problem and increase your support staff but that's not always scalable or maybe your applications aren't performing as well and there's higher latency so how do you start maybe taking advantage of the elasticity in the cloud to tackle that so in the first facet discover here's where you start laying out some of those objectives next up let's talk about envision now here's where you start identifying solutions to some of these problems now there's key techniques for this so for example you might want to create an mvp or a minimum viable product this allows your team to work towards an easy you know cupcake size solution that drives value and results and then start building on top of that in addition there's a concept called design thinking and we do this a lot here at ibm before we start developing any feature or even a bigger solution or capability we make sure that we understand how users are going to use it and that design is involved in every step of the way so here's where you start thinking of solutions so for example some of the problems that we laid out in the discover step maybe your applications are not performing as well well take advantage of the cloud to re-platform and kind of take advantage of maybe a kubernetes platform to enable better scalability in addition maybe for that support ticket issue take advantage of a chat bot so that easy questions are answered by an automated system before escalating to a real human being that can support an issue so that's the second facet in vision now the third one i want to mention here i'm kind of going through the flow here is going to be develop now here's where we're starting to think about quality code now say you've got a number of legacy applications that you've got and you're bringing them into this next decade a developer that you hire five years down the line are you really going to feel comfortable with them diving in and kind of making changes to this older code well if not now's the time to start thinking about clearing up some of that technical debt you can start taking advantage of refactoring strategies to maybe move from older school programming languages to newer ones maybe use container-based technologies so that's one clear thing another one i want to mention a lot of us have heard of tdd which is test driven development basically writing the tests before writing the code so the code matches the functionality expected but there's a new approach called bdd which takes up one abstraction layer higher called behavior driven development now this enables you to focus on the features and how people are going to actually use them this involves user research and so this is a key step that's going to enable you to focus on first the behavior of using the capabilities and then actually dive in deeper and start thinking about how they're implemented maybe then writing the test cases and then finally the code so bdd is a very interesting piece of this develop flow and one more i'll mention is ci and cd continuous integration continuous delivery this enables development teams to really keep up with the speed of agile methodologies and so i think it's a critical part with any you know devops cycle and life and flow it's really important for your teams to start thinking about continuous integration and continuous step four that i want to mention is reason now this is about infusing ai across your business processes and all the data that's being generated so i'm going to simplify this one and just say data science now the main thing here is that kind of encompasses ai and machine learning as well so for example say your logistics company this is where you can start taking advantage of something like demand forecasting so instead of waiting for the demand to come in and then scrambling to prep your distribution centers what if you use the historical data of the last time there was a lot of demand and then use maybe the weather channel apis for you know inclement weather situations and then use that to find correlations to you know respond to demand and forecast it before it even comes in now that's a great way to take advantage of data science and infusing that into your processes to drive new value next up we've got operate now operate is a key phase here we're going to be thinking about things like operational excellence there's new modern strategies for operations so things like a dark launch a dark launch is going to enable you to release a feature behind the feature flag and see how people respond to it see how your infrastructure responds to it if it doesn't do so well turn that feature flag off figure out what went wrong that leads me into a b testing now a b testing enables you to release two kind of variations of a similar capability to different subsets of users to see which ones they react to more positively so this is a great way of identifying you know which approach to take moving forward so a b testing is a really critical part of the operational steps and i think the last one i want to mention here and it's one of the objectives that we laid out in the beginning it's auto scaling so we mentioned that you know maybe you need to take advantage of the elasticity in the cloud maybe your operations team manually scales up before every major holiday today if you're kind of a sales company well instead of automatically or having the operations team scale up manually what if you could do it automatically well that's where auto scale comes in and it's a part of this kind of operational excellence in this facet of the garage methodology now the last one that i want to mention here is learn because at the end of the day you need to be able to learn from the the processes that you've put in now a simple one here is something like a retrospective and this is part of an agile flow your team is implementing a lot of processes so let's see you know what worked well and what didn't it's the time to take take that into account another one that i want to mention kind of going on tdd and bdd is hdd which is hypothesis driven development so we're all aware of requirements that come in from customers who respond to them and if they go well you know everyone's happy but sometimes that's too slow what if you could create conjectures instead capabilities that your customer might want to use and then develop those well maybe you won't always be right but when you are right that enables you to get ahead of the competition and drive value to your users in new ways so hdd is one of the key things in the learn step now if i wanted to summarize all of these i think i would call them into three major steps create execute and finally operate now i see these as kind of a cycle a life cycle for digital transformation and so with these three steps you can kind of feel like you're on the right step using some of these technology or approaches that we've talked about but with ibm garage you're not alone you can co-create you can co-execute and you can co-operate essentially it's the speed of a startup at the scale of an enterprise that's what ibm garage offers you you don't have to be alone in learning and kind of instilling all of these different approaches ibm garage can help you with those so if you want to learn more about ibm garage or you know dive into a lot of these facets and more of the things that i couldn't cover in this video check out the links in the description below now if you've enjoyed this video you want to see more videos like this in the future be sure to subscribe if you like it do you have any comments be sure to drop a like and a comment below thanks and stay tuned for more videos like this in the future