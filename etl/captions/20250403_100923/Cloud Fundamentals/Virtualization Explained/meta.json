{
  "video_url": "https://www.youtube.com/watch?v=FZR0rG3HKIk",
  "video_id": "FZR0rG3HKIk",
  "title": "Virtualization Explained",
  "upload_date": "20190328",
  "channel": "IBM Technology",
  "duration": "5:20",
  "caption": "Hi, my name is Kaleigh Bovey with the IBM Cloud team, and today we're going to be talking  about virtualization. As you know, virtualization is a fairly old technology, but it's still super relevant to building your cloud computing strategy today. So, first off: What is virtualization? Simply put, virtualization is the process of creating a software-based, or virtual, version of something, whether that be compute, storage, networking, servers, or applications. And what makes virtualization feasible is something called a hypervisor. So, we're going to write that here. And, what a hypervisor is, is it's simply a piece of software that runs above the physical server or host. There are a couple different types of hypervisors out there, and what they do is, essentially, pool the resources from the physical server and allocate them to your virtual environments. There are two main types of hypervisors out there. One being Type 1. Very simple to remember. And two - you guessed it - Type 2. So, let's start with Type 1. A Type 1 hypervisor is a hypervisor that is installed directly on top of the physical server. They're also called bare metal hypervisors. So we'll write that up here, just so you can remember. These are the most frequently used types of hypervisors, and they're the most secure, they lower the latency, and these are the ones that you'll see in the market the most. Some examples would be VMware ESXi, or Miscrosoft Hyper-V, or open source KVM. The other type of hypervisor is a Type 2 hypervisor, over here. And what makes these different is that there is a layer of host OS that sits between the physical server and hypervisor. So, by that nature, they are also called hosted. These are a lot less frequent. They're mostly used for end-user virtualization, and you might see some of the market that are called Oracle, VirtualBox, or VMware Workstation. Again, they are a lot less frequent, they're\na bit more - they have a higher latency than a Type 1 hypervisor. So, once you have your hypervisor installed, you can build virtual environments or virtual machines or, simply put, VMs. So, let's spin up some environments. So, what makes a VM, a VM? A VM is simply a software-based computer. They run like a physical computer, they have an operating system and applications, and they're completely independent of one another. But, you can run multiple of them on a hypervisor. And the hypervisor manages the resources that are allocated to these virtual environments from the physical server. So, because they're independent, you can run different operating systems on different virtual  machines. So, you could run Windows here or Linux here or Unix here, for example. Because they're independent, they're also extremely portable. You can move a virtual machine from one hypervisor to another hypervisor on a completely different machine almost instantaneously, which gives you a lot of flexibility and a lot of portability within your environment. So, looking at all of this - this is the core of virtualization as a process. So, let's talk about a couple key benefits that you want to take away from this. One: cost savings. When you think about this and the fact that you can run multiple virtual environments from one piece of infrastructure, it means that you can drastically reduce your physical  infrastructure footprint. This is consolidation at its core, and the fact that you don't have to maintain nearly as many servers, run as much electricity, save on maintenance costs, means that you save on your bottom line at the end of the day. Number two would be agility and speed. So, like I said, spinning up a virtual machine is relatively easy and quick - a lot more simple than provisioning an entire new environment for your developers if they say they want to spin up a new environment. So, that they can run a dev-test scenario. Whatever it might be, virtualization makes that process a lot simpler and quicker. And three: it lowers your down time. So, let's say that this host goes out unexpectedly. The fact that you can move virtual machines from one hypervisor to another on a different  physical server means that you have a great backup plan in place, right? So, if this host goes down, you can simply move your VMs very quickly to another hypervisor on a machine that is working. So, with this - this is really virtualization\ntoday. And like I said at the beginning, virtualization is a technology that's a few decades old at this point, but it's still super critical to understand for your cloud computing strategy today. Thanks for watching as we discussed the basics\nof virtualization. Make sure to subscribe below and give us a big thumbs up if you liked this content."
}