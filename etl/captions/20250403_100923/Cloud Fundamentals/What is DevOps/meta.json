{
  "video_url": "https://www.youtube.com/watch?v=UbtB4sMaaNM",
  "video_id": "UbtB4sMaaNM",
  "title": "What is DevOps?",
  "upload_date": "20190909",
  "channel": "IBM Technology",
  "duration": "5:58",
  "caption": "Hi, I'm Andrea Crawford with IBM Cloud. We're going to talk today about DevOps. As the name implies, DevOps is about bringing together 2 traditionally contentious groups within IT organizations: application development, which has primarily been measured on the number of changes, features, and defects fixed that are able to be pushed out into production, whereas IT operations, and their success, is primarily measured on system stability, availability. So, we have one group with pushing more changes, and another group that saying don't push any changes. So, let the fireworks begin! DevOps transformation is an important part to our client's transformation strategies in general. Particularly because of 2 main benefits. One of those being velocity. Velocity in terms of how quickly products or applications can be piped through this release pipeline. The second benefit: quality. It's not enough just to be quick in terms of how fast applications are delivered, but we also must be cognizant of the quality of what gets delivered on the other end of that pipeline. Digital reputations are at stake here, so quality and velocity both need to be balanced. The war between application development and IT operations really has one big loser and that is the business, because you see the\nbenefits are really going to manifest themselves in terms of business agility through are being responsive to consumer demands, to changing market conditions, and basically improving overall time to market of what an enterprise can deliver to its consumers. If you were to think of application delivery\nas a supply chain, or a pipeline, we really have this notion of ideation, user stories,\nwhat should be delivered in terms of adding value to the business and its consumers. So, we have ideation over here. This is also on in the form of a user stories, work items, and the like. Then we have the coding piece. This is all\nabout programming the idea from the user story. And then we have Build. This piece here includes unit test cases, packaging of the code into executables, and run times that will actually be then deployed on some sort of run time environment, be it bare metal, virtualized\nenvironment, or the cloud. And then we have Manage, and this is all about addressing what happens to an application once it lands in its runtime environment.\nAnd this is primarily focused on production, but it can also be management in terms of what you have in dev, test, pre-prod, and the like. And, then to round out the supply chain here, we've got Learn - and this is all about continuous improvement. So, not only do we need to understand are we getting faster as we deliver applications, but is the quality improving, too? So, we\nwant to make sure that our benefits are being achieved throughout the pipeline here. So, if we were to identify the use-cases for how to increase velocity and quality in the pipeline there are really 3 primary use-cases. The first is optimizing the core. By core systems, I mean we those systems that are deep within the enterprise. These tend to be monolithic, legacy, big systems of record. Typically, these applications are very difficult to modernize, re-factor, and the like. DevOps for the core often looks like retrofitting automation in situ, you so that we can optimize what we've got. The second use case is about unlocking the legacy. So, this is all about addressing culture, ways of working, and bringing development and operations together in new ways, integrated multi-disciplinary teams, and this amps up any kind of automation that we could have done in the core. And then the last: unleashing the digital.\nSo, with the maturation of cloud-native apps, 12-factor, Kubernetes, and Docker, were all about continuous delivery from ideation all the way through to continuous improvement and rounding back to the beginning. So, what we learned that we can do better we feed it back into the pipeline. This is all about modern applications delivered by modern teams on modern platforms. So, if we were to sum all of this up, DevOps is all about people,\nprocess, and tools for the benefit of business agility. Thanks for watching this video. If you have any questions or comments be sure to drop a line below. If you want to see more videos like this in the future, be sure to like and subscribe."
}