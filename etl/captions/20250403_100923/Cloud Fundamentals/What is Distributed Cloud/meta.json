{
  "video_url": "https://www.youtube.com/watch?v=eJHZ8sMjsug",
  "video_id": "eJHZ8sMjsug",
  "title": "What is Distributed Cloud?",
  "upload_date": "20200810",
  "channel": "IBM Technology",
  "duration": "9:05",
  "caption": "Hybrid cloud is one of the most common\narchitectural patterns out there, but it's generally actually the result\nof companies that are unable to abandon an existing technology stack\nin favor of the public cloud. But what if I told you you could get the best of\nboth worlds? The innovation and cutting edge technologies made\npossible through public cloud providers, and at the same time having the\nflexibility and freedom of running your assets where you choose to,\nwhether it's on-prem or edge. Today let's talk about distributed cloud and the key\nbenefits that it offers. Now I want to start with what a general\nhybrid cloud architecture looks like. So, you're going to have\ncustomers that are running things on on-prem environments,\nmaybe they're running things on public cloud environments\nor even private clouds, or even in addition we might have edge\nenvironments. Now managing all of these environments comes\nwith their own set of Ops teams, challenges, data locality, latency\nconcerns, basically all of them will require some\noverhead to maintain. Distributed cloud comes in right at the\ncenter. Essentially what you'll have is a public\ncloud sitting right at the center that's able\nto manage all of those other environments.\nEssentially it extends the capabilities of a public cloud\nto other capabilities. Now i think Gartner put it best when they said,\nthat in a report that they recently published, they said\nthat distributed cloud fixes what hybrid cloud\nbreaks. Now today I want to cover four major themes that generally correspond\nwith what distributed cloud aims to solve,\nand these actually happen to line up with where hybrid cloud tends to fall\nshort. Now the first one that I want to start\nwith is consistency. Now as I go through the example today\nI'm going to put on a number of different hats,\nwhether I'm Dev, Ops, or Security, and I want to start with an Ops Engineer\nbecause an Ops Engineer will generally have to be kind of\ninterfacing with a distributed cloud environment,\nand that's where they will generally start. So, as an Ops Engineer,\nlet's say that one of the first things that I want to do\nis work with a cloud environment. So what Ii want to do is go to a public\ncloud and in that environment let's say that I\nwant to create a Kubernetes, or even an OpenShift\ncluster. So, basically a way to manage\nand orchestrate cloud-based applications. Now in this process of creating an\nOpenShift cluster I'm probably given an option at one\npoint to choose where do I want this cluster to live.\nSo here's where I'm given a few choices. So, maybe i want to do it in a public\ncloud location. So, let's say for example somewhere like\nDallas or London, but\nthrough a distributed cloud I can register with the public cloud\nother locations. So maybe somewhere like an on-prem or edge location.\nSo, let's say I've got an on-prem location in Bangalore, or an edge location\nin Morocco. So basically what we've got here,\nis whether it's public, on-prem, or edge locations,\nwe can choose one of those capabilities in,\ndirectly in my public cloud UI and dashboard.\nThat's what a distributed cloud will generally offer.\nSo, through this process I'm now able to deploy\nOpenShift container platform clusters in three different regions. Let's say,\nso we've got three different OCD clusters. We'll say one of them is in\npublic. We'll say one of them is in edge. And we'll say the last one is on-prem.\nOkay. So, we've got that kind of situated from an Ops Engineering perspective\nI'm able to create and manage clusters across the board\nwhether they're in any of these general hybrid cloud style\nenvironments. Now as an Ops Engineer that might be good for day one, but for day\ntwo I need additional capabilities. Let's say\nthat I want to do something like scaling up and down. Well that's one of\nthe key advantages of a cloud, is the elasticity. So, let's say I can\nscale up and down. In addition, let's say I want my clusters\nto be able to network and interface with one another, basically communicate\nmy applications communicating across the board. So, maybe i want to take advantage\nof a service mesh capability, that's something a distributed cloud can\noffer. So, taking a look at that we can start doing\nsome service meshing capabilities. Okay. So, now that we've got that\ngroundwork laid out, we've covered how basically for an Ops Engineer I have a\nconsistent experience for deploying clusters in any\nof these locations, you have consistency. Next up,\nlet's talk about DevOps. So, we've covered a bit of DevOps already,\nso with the Ops perspective of deploying and managing clusters,\nbut for developers who want to utilize capabilities generally available in\npublic clouds, well I have a different angle of\napproach here. So, putting on my hat as a Dev.\nNow let's say one of the first things that I want to do here\nis create a service, right. So generally with OCP most DevOps\ncapabilities are handled it's a really good platform for being able to work\nwith containers and kind of deploying apps, but let's say\nI want to take advantage of a service that cloud providers generally provide.\nSo, this would be something like a database.\nSo I want to create a DB. So, I'm in my cloud provider,\nI'm in the dashboard, and I want to create a database\nand I'm given a similar option. I'm asked where do you want to create it? And some\ngiven options like before, data centers or locations, not just\npublic cloud but also on-prem or edge, and I can choose to deploy those\nhigh-value capabilities, you know so I can decide to deploy a\ndatabase in my public cloud. Well this is nothing special I've been\nable to do that. Or I should be able to deploy a database,\nin addition into edge environments. So that's taken care of as well.\nSo now that we've gotten that piece kind of squared away,\nwe've kind of talked about how distributed cloud enables\nDevOps to be more efficient. One other thing I want to use this example for\nhere is innovation, and this is for high\nvalue services. So, let's say I want to do AI or machine\nlearning capabilities, something that a public cloud will\ngenerally offer. So, you know, let's say I have some AI or ML\ncapabilities that I want to deploy. Well same as before,\nI can take those capabilities and deploy them to any of these\nenvironments. So with distributed cloud you're able to innovate\nwith capabilities generally only available in public cloud,\nin environments outside of the public cloud. It's one of the key capabilities.\nThe last one I want to talk about today is governance. Now governance is a key requirement for\npretty much all companies, but especially you know financial institutions, or\nhealth or insurance companies, basically concerns like data regulations,\ncompliance, data locality. How can a Security Admin effectively and\nwith a single control plane manage policies across the board? Well\ntime to put on my last hat here. Let's say that I'm a Security Admin\nand I've created a network policy. So, this network policy, let's say that it\nhandles things like RBAC, or network policies across the board, or\nsecurity policies, and I want to deploy them to clusters\neverywhere in my business, not just in the cloud, but also on-prem\nand edge. Well, with the distributed cloud you can\ndo exactly that. By taking advantage of the capabilities\nmade available I can deploy these policies\nacross the board to any of these environments. Now this is a simple\nexample, but it goes to show you how distributed\ncloud is tackling problems that hybrid cloud generally runs into.\nThanks for joining me for this quick overview of distributed cloud.\nIf you've enjoyed this video and you want to see more like this in the future\nbe sure to drop a like or a comment below.\nTo see what IBM is doing in the distributed cloud space be sure to check\nout IBM Cloud Satellite. Thank you for watching."
}