{
  "video_url": "https://www.youtube.com/watch?v=LMAEbB2a50M",
  "video_id": "LMAEbB2a50M",
  "title": "What is a Hypervisor?",
  "upload_date": "20210526",
  "channel": "IBM Technology",
  "duration": "6:32",
  "caption": "Hi there, and thanks for coming by today! My name is Bradley Knapp, and I'm one of the product managers here at IBM Cloud, and the question that we're trying to help you solve today is: what is a hypervisor? And this is a question that we actually get fairly often, and it's one that sometimes people are maybe a little embarrassed to ask, and I want to encourage you there's nothing wrong with ever asking this question. For folks like me that have been doing cloud for a very long time, and virtualization for a very long time, these technologies are secondhand. They're not things that we even think about. But for someone who's early in their career, or maybe a student, a college student, or a high school student, that's just starting out, understanding these basic concepts is key to \nsuccess because you're going to build on top of these for the rest of the career. And so, what is a hypervisor? A hypervisor is software that runs on a compute host that virtualizes it. Lots of big buzzwords, not a terribly helpful answer. And so, I'd like to illustrate that out for you, right? So, if we take and we draw this box. This is a compute host. A compute host has 3 essential components in it, right? The first one is going to be a CPU ... or CPUs, singular or plural. This is where the processing happens. The second is that compute host is going to have RAM, and the third is that compute host is going \nto have network. Because you've got to be able to process things, you've got to be able to store them short term, and you've got to be able to send that data someplace. The compute host will probably have, but isn't guaranteed to have, a fourth piece. So, we're going to put it out here, and we're going to call this storage . So, why do we put our storage over to the side? It's because that hypervisor doesn't necessarily virtualize the storage, and that's okay. There are no problems with that. So, this is our compute host. This could be a server in a data center, it could \nbe a desktop, or a laptop sitting on your desk. So, you've got one box that can be used by one \nperson. Well, if it's a very, very, powerful box, how do you then take and spread that power out \namong multiple users, multiple people, multiple workloads, so that they can take advantage of it? That is where our hypervisor comes into play. So, the hypervisor is a software layer, that sits on top of the compute host, that virtualizes all of the functions of that host. It's going to take your CPU, or your processors, and divide them into subparts. It's going to take your RAM and slice the RAM up into subparts, and it's going to take your network and \nit's going to divide it into subparts. Why do you need to divide them up? Because that hypervisor is going to allow you to schedule multiple virtual servers, right? This is a physical server. That hypervisor lets you schedule multiple virtual servers on top of it, so a virtual server, or VSI, \"Virtual Server Instance\", has virtual compute, right? It has vCPUs. It has virtual RAM, VRAM, and it has virtual network, a vNIC , and so, because you're dividing these resources up, you are then going to be able to do it many times, right? You aren't limited to just a single virtual server. You can have a second, and you can have a third, and you can have a fourth, and you can continue adding virtual servers until you saturate the performance of that underlying host. And that hypervisor, that's that software layer that runs in the middle, this is what makes the magic happen. It's what ensures that only the data that needs to be seen by that VSI is seen by that VSI, and that's maybe the most important part. So, if we think about multiple virtual servers running on a physical server, how do we ensure that my data, that's in this kind of \norange one here, isn't visible by data from these other guys? That's data security 101, right? My data shouldn't ever be visible by somebody else. And we're all running on the same box, so there's a risk that we might be. Well, part of what that hypervisor does, is it creates a  line of demarcation between every virtual server, so that the virtual servers cannot crash through \nthis line and see what other virtual servers are doing. This is the security piece that's incredibly important. And then, finally, we talked before about the storage, right? We \nsaid that storage is important because, obviously, after you've ingested your data, put it on RAM, computed it, and then written it back down to RAM again, you've got to send it somewhere and you've got to store it long term somewhere, otherwise what's the point? And so, storage can be attached to a virtual server a couple of ways. One way is it can go through the hypervisor, right? So, your storage can come in through the network, and it can go into the hypervisor, and then \nbe attached to that virtual server. That's one way. A second way would be for it to be attached directly but for it to be local, right? So, our storage isn't going to transit through \nthe network because there's no reason for that. It's going to go right to the hypervisor, because \nit's already plugged into the physical server, and then it's going to get attached. And then the third way is: imagine network storage like an NFS share. In this case, your storage can bypass that hypervisor entirely and connect directly into that virtual server. Now it's still going to go through the network, and it's still going to go through that vNIC, but the hypervisor isn't going to control anything other than routing that data. So, that hypervisor really is the magic, right? That's the magic layer that makes a virtualization possible, that makes multi-tenancy possible, and it's important because multi-tenancy is what has driven the cost of compute down. If you consider a compute host might be 5 or 5 thousand dollars a month by itself, virtualization allows us to sell you a virtual server for fifty dollars a month, or maybe it's free. So, that's the beauty of the hypervisor, that's how it works at a very high level and, as always, if you have any questions, just let us know. If you have any questions, please drop us \na line below. If you want to see more videos like this in the future please do like and subscribe and let us know. And don't forget, you can grow your skills and earn a badge with IBM Cloud Labs, which are free browser-based interactive Kubernetes labs that you can find more information on by looking below. Thanks again!"
}