As our applications become more and more popular and the compute demands keep increasing and increasing, we often have to decide how are we going to be able to meet the capacity that's required? Hello, my name is Jamil Spain, Developer Advocate with IBM Cloud. And the answer to this mysterious situation that we are in is solidifying your hybrid cloud approach. What really is hybrid cloud? When we talk about it, it seems like a very loaded term. It is a buzz word that we often hear about. Well, let's simplify it for a second. Hybrid cloud is really the combination of on-premise, cloud, private cloud, edge ... all the different types of computing environments that you can have. Combining them up to one. So your workloads are kind of spread across there as well. Well, we talk about the cloud providers. We're talking about a lot of the major providers, IBM being one, of course. Next, we have AWS, Google Cloud, Azure, so on and so forth, and there's many other smaller providers that do infrastructure as a service, Digital Ocean, Linode, all these individual platforms that are out there. Their goal is to allow you to get more and more expansion that you can use. Now, when it comes to hybrid cloud, the first step that you normally go through is really leveraging a lot of native services that are there. That's really when you say you're using a cloud natively. It means that most cloud providers are going to have a particular ... they're going to have a particular set catalog of services, and you're going to have the option to actually go in and leverage any of those as you want. Usually that will be a level one of maturity from an IBM perspective, thought leadership is, you're using individual services to augment your capabilities there. So they'll be like, we'll say single. All right, so that's more like leveraging using storage that's there, or any other single type of service that you want to do. Maybe lifting-shifting some compute to work through. And that's what we have a lot of the, I'll say like virtual machines. Lifting-shifting is another term you hear, and that really talks about taking your your initial method of computing and being able to move to is a similar one in another environment. That way you kind of have that portability that you achieve. Well, let's talk through some couple of other scenarios. One other way to make hybrid cloud successfully is to set certain boundaries between these clouds. So, let's say you have your on-prem or your data center, "OP", on-prem, all right, data center, and you want to work with another, you know, a cloud provider, let's just say any of these, let's put them all in the same box here. Azure, Google. Cloud. OK, let's say they're all in the same box. Well, one way to do that is to maybe set API boundaries here. And I can generate or talk back and forth, communicate to have workloads process through APIs or some type of messaging tier. Could be message queues as different types of messaging that can occur from a messaging or Kafka. Again have more messages to go across, and then another, let's say you have another environment, other remote data center. The same thing can occur. And this model here, level two, as I call it. You're kind of being able to take your initial compute and be able to send workloads or communicate with other workloads there to invoke maybe some processing to occur and go back and forth between the thing, the same mechanism to kind of make sure that work kind of ensures and runs. Now finally, with the now the recent explosion Kubernetes workloads, this presents a very similar pattern here. Now this previous model, some of these may be in different form factors here. You could have VMs mixed with individual services as we're talking about, and being able to negotiate and build how that integration kind of works between them all. Well, when we actually do the third level, which is being able to have the concept of running workloads, the boundaries of cloud really go away, and once you're using more than one cloud provider, you're said to be "multi-cloud" there. Now at that level, each of these cloud providers may have different nuances to how their individual services work. So at that point, you really need some layer that standardizes how things and guarantee how things work, no matter what cloud they're in. And that's very useful when you start putting in things like Kubernetes all around, I'm going to do the "K" here, we'll just do this "K" for Kubernetes. We can guarantee that everything kind of works the same as it goes, and that's one of the beauties of leveraging platforms like OpenShift because they have opportunities to run in all different clouds. And after you are on one platform, it functions the same in each other. All right. So that's a common way of kind of elevating and scaling up as you go. But this has kind of been the topic of hybrid cloud. It's really about taking advantage of all the computing power necessary. Some of your use-cases you may be using for this is to expand workflow processing or just to build that next generation set of applications or workloads natively in a cloud. And so whether you're going natively on that platform or want to standardize or like a Kubernetes platform where you're guaranteed to have the same operation no matter where you deploy, these are all opportunities that you have at your fingertips to use. I hope this has been useful. Good luck when you're expanding your architecture to handle your workloads. Thank you for your time. If you have any questions, please drop us a line below, and if you want to see more videos like this in the future, please like and subscribe.