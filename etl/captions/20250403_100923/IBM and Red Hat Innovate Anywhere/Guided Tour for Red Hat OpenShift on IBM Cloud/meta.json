{
  "video_url": "https://www.youtube.com/watch?v=l4Vrj7mkxhQ",
  "video_id": "l4Vrj7mkxhQ",
  "title": "Guided Tour for Red Hat OpenShift on IBM Cloud",
  "upload_date": "20190801",
  "channel": "IBM Technology",
  "duration": "5:46",
  "caption": "Hi, everyone My name is Sai Vennam and I'm with IBM Cloud team. Today, let's talk about Red Hat OpenShift on IBM Cloud. First, OpenShift. It's an open source application platform that aims to make the Kubernetes experience better for developers and operations team. Red Hat OpenShift on IBM Cloud is a fully managed platform from the ground up. This has a number of advantages which we'll cover in this video. It starts with an integrated OpenShift experience. You get automated provisioning of the infrastructure, as well as configuring OpenShift. You can take advantage of features for high availability to ensure your applications will never have any downtime. And finally, for all of your monitoring and\nlogging needs, take advantage of direct integrations with Sysdig and LogDNA. Let's get started by walking through the process of creating an OpenShift cluster. We will navigate through the dashboard and choose an OpenShift cluster. We see some information about this service, and we'll go ahead and hit \"create\". Now, we're asked to provide some information to start creating this cluster. We see an option to choose between Kubernetes or OpenShift, so we can go with native Kubernetes but in this example will be working with managed OpenShift on IBM Cloud. So, by choosing OpenShift we can then scroll down and choose a number of different geographies. We have multizone regions worldwide which enable you to have highly available clusters spread across multiple datacenters in the same region. Next, we have choices for the default worker pool. We can take advantage of either shared or dedicated virtual computing resources. In addition, there's options for bare metal and GPU-enabled machines as well. Finally, we will choose the number of workers that we want, and we'll go ahead and provision that cluster. The cluster will be ready shortly, but in the meantime, let's go ahead and jump to a cluster that's already started. Let's see the IBM Cloud console experience. We can see a basic overview of our cluster. We can set up something like Key Protect, an encryption key management service to encrypt your applications and data - and even supports bringing your own key. Switching to the other tabs, you can fully configure the workers your cluster is using. This includes updating your worker nodes, as well as configuring additional worker pools. Let's get to the good stuff, the OpenShift web console. Here we have the OpenShift Container Platform web console. We can first start by creating a project. A project is an OpenShift abstraction based on name spaces, but it has user management built in. This means you get the best practices for security from the start. With the project, we can start by navigating the catalog, or importing an existing project. Let's start by browsing the catalog and choosing a Node.js application which comes with a Mongo database attached. We'll go ahead and choose the default configuration options and hit \"create\". Within minutes it starts to provision our application, the database, the access, and even sets up some routes for us. This build is going to take a couple of minutes. So, let's go ahead and switch to a project where I've already got this application running. Well, we have a deployment, but the first thing I want to do is actually enable access to it. We'll go into the routes view and create a new route. We'll go ahead and make sure it is connected up to the right service and hit \"create\". Let's test that it works. We'll go into our routes and hit that host name, and there we go, we can access our Node.js application running in OpenShift. The OpenShift web console makes it easy for \"day one\" tasks, like building and configuring applications. For \"day two\" operations tasks, we will want to take advantage of the OpenShift CLI. Let's take a look at the CLI experience with the OC commands. After installing the CLI, we will grab the login command from the OpenShift web console. We will then open up the terminal and paste in that same login command. In a few seconds it will log us into the cluster, and we can get started by first running the OC project and then putting in the name of the project that we just created. We can run some environment health checks here, and verify our running pods and containers. Let's start by running the \"oc get nodes\" command. This will allow us to see the different worker nodes and the hosts that are running within our cluster. Now, let's see the pods that are running in our application. We can run the \"oc get pods\" command with the \"-o wide\" parameter. This is going to allow us to see our running pods as well as the node that they're running in. You can take advantage of integrations with Sysdig and LogDNA. By accessing the observability dashboard on IBM Cloud, you get access to all of this in a single location. Here you can access your logs with LogDNA, and gain rich container visibility using Sysdig. From its onset, Red Hat OpenShift has been focused on making the Kubernetes experience easier, and enabling enterprises to take on cloud-native development. IBM Cloud builds on open source for advanced capabilities to ease the pain of security in scale, not just on day-one building, but also day-two operations and across the lifecycle of software. Together, IBM and Red Hat are building an open hybrid cloud foundation, built on open-source technologies and principles, to allow you to get started on your hybrid cloud strategy the right way."
}