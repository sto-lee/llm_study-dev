{
  "video_url": "https://www.youtube.com/watch?v=QTD-gqS2E7w",
  "video_id": "QTD-gqS2E7w",
  "title": "Kubernetes drone demo: Using Istio to manage app traffic",
  "upload_date": "20200130",
  "channel": "IBM Technology",
  "duration": "2:20",
  "caption": "[Music] suppose I have a new version of my application that's ready for launch we've tested it and it's working well but I'd like to ease it into production let's see how the sto service mesh can help us with that surface meshes like sto allow for greater control over the traffic and communication between each of our applications to pull it in the cluster is teo as an open source project you can deploy sto on kubernetes and get visibility automatic encryption and advanced routing policies on your applications best of all your team doesn't need to change any application code to use this do at first we only want to send a small percentage of the traffic say 20 percent to the new version of our travel application will send 80 percent of the traffic to the existing version until we're sure the new version is working well for customers with sto installed on our cluster traffic policies can be applied the same way as kubernetes objects using Y Amal and coop control apply commands first we'll deploy a version 1 and version 2 of our applications in this scenario will use the drones to represent a deployment and the height of the drones to represent the percentage of traffic being sent to the application both drones are flying at the same height meaning there are no traffic rules applies we need to ensure version 2 of the application is running ok before we're ready to send a hundred percent of the traffic to it and get rid of our version 1 an sto virtual service allows for defining rules to control traffic flow well create a virtual service configuration which sends 80% of the traffic diversion 1 and 20% to version 2 I can see how sto would become increasingly valuable as a team needs to manage complex relationships between applications besides Canary rollouts like we just saw you can do routing based on headers fault injection to test resiliency get telemetry and tracing data and enforce authentication policies thank you so much for joining us today for this demonstration we can't wait for the next time you"
}