{
  "video_url": "https://www.youtube.com/watch?v=kI62_Xw2Qgg",
  "video_id": "kI62_Xw2Qgg",
  "title": "Deploy apps and run anywhere with IBM Cloud Satellite",
  "upload_date": "20210301",
  "channel": "IBM Technology",
  "duration": "6:27",
  "caption": "Many enterprises today are getting advantages \nout of moving workloads into the public cloud.   They're building cognitive applications, they're \nscaling them on demand, and they're improving the   speed of their development through as a service \nAPI-based consumption on the public cloud. But   the reality is many workloads have not moved to \nthe public cloud yet many of those workloads are   from regulated industries, they have security \nand compliance requirements, or performance and   latency requirements, that make it challenging to \nphysically move those applications into a public   cloud data center. And what many organizations \nreally want is all of the agility benefits of   public cloud, but the flexibility to run those \nworkloads wherever they need them: on-premises   in their existing data centers, in multiple public \ncloud providers around the world, or at the edge   of the network closer to the applications \nand data sources that they need to process.   Public cloud is evolving to satisfy this \nrequirement with a new concept called   “Distributed Cloud”. So, the heart of IBM Cloud \nSatellite is the notion of IBM Cloud Services   managed anywhere. When you consume capabilities on \nthe IBM Cloud today you have a catalog of over 130   services that you can use to build and run your \napplications - everything from infrastructure to   Kubernetes and OpenShift databases, DevOps tools, \nand frameworks for AI machine learning and IOT.   All of those services are available as APIs that \nyou can provision on demand, and you can consume   and use to build your applications. With IBM \nCloud Satellite, we're extending that catalog   of services and enabling it to be consumed \nin the exact same way, through the same APIs,   in locations outside of IBM Cloud regions. So, \nyou can now consume an OpenShift cluster in your   data center, or AI machine learning framework in \nyour factory. You can use those capabilities in a   consistent way wherever the application workload \nneeds to run. You can also use software - things   like IBM Cloud Paks and open-source capabilities \n- and deploy them in a consistent way across   any environment. One of the advantages of this \napproach is that the public cloud becomes kind of   the central management, or control plane, for all \nof your distributed workloads. You have a single   console that you can log into with IBM Cloud \nthat allows you to provision resources, provision   cloud services, configure them, provision your \napplications, and manage them in a consistent   way across this diverse set of environments.  You \nget a single way to do security. You also get,   of course, common observability - logging \nand monitoring, and dashboards and alerts,   that allow you to monitor the workloads that \nyou're running in a consistent way across all   these environments.  We're also doing some work \nin Satellite to help you with inventory and change   management. So, part of the power of Satellite is \nthis common control plane or single pane of glass   that allows you to manage your applications across \na diverse set of environments. Now, how does this   work?  Kind of the key idea within Satellite that \nwe're introducing is the notion of a location.   A location is a way to define, to IBM Cloud, a \nplace outside of IBM Cloud where you want to be   able to deploy and consume cloud services. It \nis a collection of infrastructure that you own   that we're going to use on your behalf to run \ncloud services. That location is essentially   a collection of Linux hosts, of virtual machines \nor physical machines, that get arranged together   into a pool of resources, that get managed \nautomatically by Satellite, and that get used,   by us, to provision services. So, when you, let's \nsay, you want to create a Satellite location in   your data center, you can provision a set of Linux \nmachines within that data center. You register   those Linux machines with IBM Cloud as a location, \nand once that collection is registered with IBM   Cloud Satellite, you now see that location kind of \nas like a custom region within your cloud account,   where you can now deploy cloud services. So, \nif you want to create a Postgres database,   define a DevOps tool chain, or create an \nOpenShift cluster - when you provision that   cluster through services in the cloud, that custom \nlocation you just defined in your data center   will be a location that you can select \nwhen you provision that resource.   And so, locations is a really simple concept where \nyou're able to take any Linux infrastructure and   make it available as a place to run cloud \nservices.  Now, one of the advantages of   this idea of a location is it really provides a \ntremendous flexibility. IBM Cloud Satellite is   built on top of Kubernetes and OpenShift as the \ncommon infrastructure abstraction that we use   to allow you to consume cloud services in any \ninfrastructure. And by using OpenShift as that   abstraction layer, we can support a variety of \ninfrastructures underneath a Satellite location.   You can bring your own custom infrastructure \nin your data center, physical or virtual   servers. You can use your account on \nanother public cloud like amazon, or azure,   or google - and consume that infrastructure, \nand arrange it into a location that's used by   IBM Cloud for running cloud services.  Now, since \nthose locations, those services and applications,   are managed by IBM Cloud, we, of course, \nneed a connection back to the cloud to help   us manage those things - and that connection \nis provided by a component called “Satellite   link”. And the idea of Satellite link is to \ngive you the transparent visibility to all the   data that's flowing back and forth between \nthe cloud and that location, and to give you   control over what applications and resources are \nexposed in those locations. So, these two ideas,   of location and link, provide the fundamental new \nconcepts that Satellite introduces to IBM Cloud   to give you the power of services anywhere. We're \nalso going to provide some optimized solutions.   Fully integrated rack systems both from IBM and \nfrom partners, and as-a-service infrastructure   capabilities where we can run the entire stack \nfor you from hardware through infrastructure,   and up into platform and SaaS applications. And \nso, you can consume infrastructure either with   what you have, you can build new environments, \nor you can run multi-cloud environments   across IBM Cloud and other public cloud providers. \nSo, those are kind of the core ideas in Satellite:   locations and link allow us to extend our \ncloud catalog services to any location,   giving you the power of cloud, and the power of \nIBM Cloud, anywhere in the world that you need   it. All you need is some Linux infrastructure \nand IBM does the rest. Thanks a lot."
}