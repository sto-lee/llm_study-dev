in my last video i show you how to write a quantum circuit using kiskit but i'm sure that you are wondering how to actually take la quantum program and rang it on a real quantum computer quantum computers have existed since the 1990s but until recently they are only accessible to researchers in labs today quantum computers still require special equipment and maintenance but thanks to the development of cloud technology anyone can access our quantum computers through the cloud today most of the real world quantum applications uses some kind of interplay between the classical and the quantum resources that is sending my circuits to the real quantum hardware for execution is only half of the story once the program is the circuits are done being wrong the quantum hardware returns the results back to my laptop my quantum program then does some kind of classical processing and the output of this classical processing is then used to generate the next sets of circuits to run unfortunately this is a very inefficient model because my real world application can have hundreds of iterations and for every single iteration the circuit the circuits need to be sent all the way to the quantum hardware which can be extremely far away ellen needs to wait for the result to again make the return trip just to generate the circuits for the next iteration it is spending more time on the data transfer than actual execution and this is why in 2021 ibm introduced kisky runtime kisking runtime takes quantum programs and all its dependencies and package it in a containerized execution environment this environment is close to the quantum hardware so it can reduce the latency by creating a tight loop and because the program runs on the cloud it also improves the scalability of classical resources but there's more than that your programs now run in the cloud and can get all the benefits from of a cloud-based model most notably ksk runtime offers a set of tools and features that would make quantum computing easier for developers it has a number of predefined routines such as circuit optimization lot remaps the gates in your circuits so they would run faster similar to what modern compilers do circuit result post-processing law will take all those measured ones and zeros and convert them into higher level representation such as expectation values and the last one is error mitigation law gives you higher quality results the error mitigation is especially important because quantum hardware today is not perfect and the raw results often contain errors so without error mitigation you wouldn't be able to get the correct results back so how do you actually access cascade runtime the answer is simple you use kiskit kit has a package that allows you to send your entire quantum program including both the quantum and classical piece into this execution environment thanks for watching if you have any questions please leave them in the comments below also please remember to like this video and subscribe to our channel so we can continue to bring you content that matters to you