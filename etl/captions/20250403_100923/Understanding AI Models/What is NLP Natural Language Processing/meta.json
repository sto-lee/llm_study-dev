{
  "video_url": "https://www.youtube.com/watch?v=fLvJ8VdHLA0",
  "video_id": "fLvJ8VdHLA0",
  "title": "What is NLP (Natural Language Processing)?",
  "upload_date": "20210811",
  "channel": "IBM Technology",
  "duration": "9:37",
  "caption": "What is natural language processing? Well, \nyou're doing it right now, you're listening   to the words and the sentences that I'm forming \nand you are forming some sort of comprehension   from it. And when we ask a computer to do that \nthat is NLP, or natural language processing.   My name is Martin Keen, I'm \na Master Inventor at IBM,   and I've utilized NLP in a good number of \nmy invention disclosures. NLP really has a   really high utility value in all sorts of AI \napplications. Now NLP starts with something called   unstructured text. What is that? Well, that's \njust what you and I say, that's how we speak.   So, for example, some unstructured text is \n\"add eggs and milk to my shopping list.\"   Now you and I understand exactly what that means, \nbut it is unstructured at least to a computer. So what we need to do, is to have a structured \nrepresentation of that same information that   a computer can process. Now that might look \nsomething a bit more like this where we have a   shopping list element. And then it has sub \nelements within it like an item for eggs, and an item for milk. That is an example of \nsomething that is structured. Now the job of natural language processing \nis to translate between these two things.   So NLP sits right in the middle here translating \nbetween unstructured and structured data. And when   we go from structure from unstructured here \nto structured this way, that's called NLU, or   natural language understanding. And when we \ngo this way from structured to unstructured,   that's called natural language generation, \nor NLG. We're going to focus today primarily   on going from unstructured to structured in \nnatural language processing now let's think of   some use cases where nlp might be quite handy. \nFirst of all, we've got machine translation. Now when we translate from one language to \nanother we need to understand the context of   that sentence. It's not just a case of taking \neach individual word from say English and   then translating it into another language. We \nneed to understand the overall structure   and context of what's being said. And my \nfavorite example of this going horribly wrong   is if you take the phrase the \"spirit is willing, \nbut the flesh is weak\" and you translate that from   English to Russian and then you translate \nthat Russian translation back into English   you're going to go from the \"spirit is willing, \nbut the flesh is weak\" to something a bit more   like the \"vodka is good, but the meat is \nrotten\" which is really not the intended   context of that sentence whatsoever. So \nNLP can help with situations like that. Now   the the second kind of use case that I like \nto mention relates to virtual assistants,   and also to things like chatbots. Now a virtual \nassistant that's something like Siri, or Alexa   on your phone that is taking human utterances and \nderiving a command to execute based upon that. And   a chatbot is something similar except in written \nlanguage and that's taking written language and   then using it to traverse a decision tree in order \nto take an action. NLP is very helpful there.   Another use case is for sentiment analysis. Now \nthis is taking some text perhaps an email message   or a product review and trying to derive \nthe sentiment that's expressed within it.   So for example, is this product review a positive \nsentiment or a negative sentiment, is it written   as a serious statement or is it being sarcastic? \nWe can use NLP to tell us. And then finally,   another good example is spam detection so this \nis a case of looking at a given email message   and trying to drive is this a real email \nmessage or is it spam and we can look for   pointers within the content of the message. So \nthings like overused words or poor grammar or an   inappropriate claim of urgency can all indicate \nthat this is actually perhaps spam. So those are   some of the things that NLP can provide but how \ndoes it work well the thing with NLP is it's not like one algorithm, it's actually more like a \nbag of tools and you can apply these bag of tools   to be able to resolve some of these use cases. \nNow the input to NLP is some unstructured text   so either some written text or spoken text that \nhas been converted to written text through a   speech to text algorithm. Once we've got that, \nthe first stage of NLP is called tokenization This is about taking a string and breaking \nit down into chunks so if we consider the   unstructured text we've got here \"add \neggs and milk to my shopping list\"   that's eight words that can be eight tokens.   And from here on in we are going to work one \ntoken at a time as we traverse through this. Now   the first stage once we've got things down into \ntokens that we can perform is called stemming. And this is all about deriving the word stem \nfor a given token. So for example, running,   runs, and ran, the word stem for all three of \nthose is run. We're just kind of removing the   prefix and the suffixes and normalizing the \ntense and we're getting to the word stem.   But stemming doesn't work well for every \ntoken. For example, universal and university,   well they don't really stem down to \nuniverse. For situations like that,   there is another tool that we have \navailable and that is called lemmatization.   And lemmatization takes a given token and learns \nits meaning through a dictionary definition   and from there it can derive its root, or its lem. \nSo take better for example, better is derived from   good so the root, or the lem, of better is good. \nThe stem of better would be bet. So you can see   that it is significant whether we use stemming, \nor we use lemmatization for a given token.   Now next thing we can do is we can do a \nprocess called part of speech tagging. And what this is doing is for a given token \nit's looking where that token is used within the   context of a sentence. So take the word make for \nexample, if I say \"I'm going to make dinner\", make   is a verb. But if I ask you \"what make is your \nlaptop?\", well make is now a noun. So where that   token is used in the sentence matters, part of \nspeech tagging can help us derive that context.   And then finally, another stage \nis named entity recognition.   And what this is asking is for a given token \nis there an entity associated with it. So   for example, a token of Arizona has an entity of a \nU.S. state whereas a token of Ralph has an entity   of a person's name. And these are some of the \ntools that we can apply in this big bag of tools   that we have for NLP in order to get from this \nunstructured human speech through to something   structured that a computer can understand. And \nonce we've done that then we can apply that   structured data to all sorts of AI applications. \nNow there's obviously a lot more to it than this   and I've included some links in the description if \nyou'd like to know more, but hopefully this made   some sense and that you were able to process some \nof the natural language that I've shared today.   Thanks for watching. If you have questions, \nplease drop us a line below. And if you want   to see more videos like this in the \nfuture, please like and subscribe."
}