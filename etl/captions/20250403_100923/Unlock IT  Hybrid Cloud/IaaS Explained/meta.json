{
  "video_url": "https://www.youtube.com/watch?v=XRdmfo4M_YA",
  "video_id": "XRdmfo4M_YA",
  "title": "IaaS Explained",
  "upload_date": "20200115",
  "channel": "IBM Technology",
  "duration": "8:07",
  "caption": "All right, hi everybody and welcome back\nto the channel. My name is Bradley Knapp, and I'm one of the Product Managers here at IBM Cloud, and what I want to talk with you guys about today is a question that we get fairly commonly when folks are starting their cloud journey and starting to learn about cloud, and that's, \"What is IaaS?\" I read about cloud, I see this IaaS thing everywhere, what does it actually mean? And, so, \"IaaS\" is an acronym, and so it's broken into 2 parts: the first part, the \"I\", that's \"infrastructure\". And, so, if you think of cloud as being just some other dude's computer, running somewhere else, that's the infrastructure part. And, so, that infrastructure, if it's not cloud - it could be running in a data center\nsomewhere, it can be running in a closet somewhere, your laptop or your desktop is infrastructure. And then the \"a.a.S.\" piece is \"as-a-Service\". That's the billing method, that's the way that you consume it. And there are other kinds of as a\nservice. You've got \"PaaS\", Platform as a Service, you have \"SaaS\", Software as a\nService. There's lots of different kinds of things that you can consume as-a-Service but very specifically what we want to talk about is the \"I\", it's the infrastructure. And so I've got this diagram written out over here because infrastructure really falls into three main categories, right. The first category is going to be compute, that's where the processors are that's where the actual\nlifting and computing gets done. The second piece which is storage kind of\nfalls into three main buckets and lots of smaller buckets on top of it because\nthere's different kinds of storage. And then the third piece, the piece that ties\neverything together that's our network piece. And so we're\ngonna draw this one over here because without network you can't do anything, network is how the compute talks to the storage and that's how the compute talks\nto the other compute. And so like I said we can break this down into different\npieces and so in the compute side I've got three things\ncalled out up here, the first one is kind of I've just got a labeled compute, its\ngeneral purpose compute, right. This is your normal web server or application\nserver, it can really be whatever general purpose kind of computing needs you have.\nThe second two are, or the second and the third really are more specific right. So\nGPU is is a graphics processor, that's a very\nvery high speed processor that's used in conjunction with a traditional processor\nfor specific kinds of workloads right. This is gonna be your machine learning\nand your AI. And then the third piece, HPC, that's high-performance computing. So\nthere's specific kinds of workloads that had very specific requirements as far as\nfrequency which is your clock speed and the number of cores that are required\nwhere you have to have lots of power packed into a very, very, very small\nfootprint, that's gonna be your HPC. And likewise on the storage side you've got\ndifferent kinds of storage because you have different storage needs. The most\ncommonly used one is gonna be object storage. Object storage is a little bit\nlower performance but it's relatively inexpensive and that's for your general\npurpose storage right. What goes into object storage? Well you can have things\nlike pictures, you can have documents, you can have really whatever you want can go\ninto that object storage, it's where all of the data and all of the graphics on\nthe web server that's all hiding in object storage. And then the second\nand the third piece that I've got called out here, block and file, these are\nspecific kinds of storage, specific kinds of network storage, and they attach in\nvery specific ways. Block storage attaches with iSCSI, file storage\nattaches with NFS, it's the way that they mount into the actual compute itself. And\nthere are specific kinds of applications that require block storage or file\nstorage because each of them has their own features and benefits. And so to talk\nabout how we pull all of these things together we need to talk about the\nnetwork, because network has two main components that matter. And so what I\nwant you to do is I want you to think of your network as a pipe, right. And so a\nnetwork can be a small pipe, that would be like a pipe measured in megabits so\nyou can't press much data through it. Or it can be a very large pipe, that very\nlarge pipe that would be measured in gigabits per second. And so the more data\nyou need to push simultaneously the larger pipe you need and the more\nbandwidth you need. The second way that we measure network traffic is how much\ndata gets pushed through this pipe over a set period of time. Normally it's\nbilled by the month but it could also be billed by the\nminute, by the second, or maybe even by the day, or by the week. And so to take\nall of this and tie all this together, I want to use an example of something that\nrequires some specialty components right, we're going to talk a little bit about\nan AI workload. And so if you think about an AI workload where you're going to do\nautomatic visual recognition of pictures. Let's say that you have a billion\npictures down here in object storage that you are then going to use to train\nyour model that's running on these GPU servers, and so you take that billion\npictures and since a billion is a lot and pictures are very large you have to\npush them through a really big pipe, that's your network pipe up into the GPU server\nbut the GPU server doesn't have any storage inherent to it. So that GPU\nserver is actually going to take and write that into block. And it's going to\nwrite that data back and forth, and back and forth until the model is done. Once\nit's trained it's going to take all of the data that we pushed up here and all\nof the results and it's going to write all of that back down into object\nstorage. Why object storage? Because again, it's less expensive, it's a good\narchiving solution. And so you're pushing a ton of data through these pipes while\nthey're turned on and then once you're done you get rid of them. And so the\nsecond piece that I want to talk about is the \"as-a-Service\" piece, this is the\nway that you consume. And so when we talk about as-a-Service there are kind of\nfour things that really, really matter in this model and the first one is that\nofferings that are consumed as-a-Service are generally speaking shared. And so by\nshared I mean they're multi-tenant, many people use the same offering, we just\ntake and carve it up and make it available to multiple different\ncustomers simultaneously. So that's the first piece of as-a-Service. The second\npiece is the hourly or monthly piece. This is talking about how we bill. \nIn the case of compute, it could be a certain number of cents, or certain of\ndollars per hour, or per month. In the case of storage, we would bill out in the\namount of data that's stored in a given month, so that would be cents per\ngigabyte per month. In the case of network, there are two different metrics\nwe about earlier right. The size of the pipe\nyou would pay per month charge for that, and then the amount of data that goes\nthrough it again measured in gigabytes per month, or cents per gigabytes per\nmonth. So that's our billing metric. And then the third piece, and this is a very\nimportant one, is that there are no contracts involved in an as-a-Service\nmodel, or there aren't necessarily contracts. There can certainly be them\nbut they're generally advantageous to you. By no contracts we mean that you\ndon't have to agree to use something for a set amount of time, you use it for as\nlong as you need it and then you get rid of it. And so rather than a checkmark for\nno contracts I'm just gonna put a little X there. You only use it to when you need\nit, it's on demand. And then the last piece, and this is probably the most\nimportant as-a-Service offerings are self service. That means that you can go\nout to a website, you punch in your information, your payment details, click\nthe Go button and that as-a-Service offering is going to be provisioned and\ndelivered to you. It's not something that takes days or weeks or months to set up\nand configure, it's one that can be provided in minutes or hours. Thanks for\nstopping by today. If you have any questions, please drop us a line below in\nthe comments. If you want to see more videos like this in the future, please do\nhit that like and subscribe button that way we know you're interested in it. And\ndon't forget you can always get started and cloud at no cost by signing up for a\nfree IBM Cloud account at cloud.ibm.com."
}