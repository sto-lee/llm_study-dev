welcome to Tech talk today's topic is get Ops the single source of Truth for deploying your code to production a kubernetes environment and today I'm joined by Brad tobel who's going to explain some of the tools that you can use to make that happen the first of which is probably familiar to most is tecton and the other which Brad is going to introduce us is called Argo CD could you explain how these two are going to play together absolutely so let's first look at what tecton gives us if you look at tecton it's got two main pieces it's got tasks and pipelines right and so what happens is we have these reusable tasks and these are steps like clone repository run unit tests build and deploy an image and techton allows you to take those reusable tasks and compose them into pipelines and those pipelines do all the stages of CI CD and can even deploy to production great okay so that makes it so you can simplify your deployments and save a lot of time not having with manual steps absolutely okay and so how does Argo come in how does it help with tecton well the nice thing about Argo CD is it's a pull-based model so with tecton it's a push-based model but Argo CD is one of pull-based model and it's declarative so just like kubernetes is declarative you declare everything Argo CD allows you to to put your your yaml files your configuration and a git repository and declare what you want to happen and Argo CD so it's gonna pull things from your repo right and then it's also going to have a little kubernetes cluster sure okay I got it right so you've got these two models you can use tecton all the way up to the step of of building and deploying an image and putting an image in a registry and then you can take all your configuration files put them in a git repo and all you got to do with Argo CD is point it at the git repo and pointed at a kubernetes cluster and it's going to do the rest so let me play that back to you see in a tech Don essentially when I put out my declarations that's what actually cause causes the deployment to occur but in this case you're saying Argo CD is actually monitoring my declaration inside the repo itself and then re-synchronizing it did I get that right yeah absolutely did it's it's going to look for what's in that uh the git repo with your deployment files and it's going to look with what's running in production and it's going to make sure that what runs in production matches the source of Truth which is what those yaml files are in that git repository fair enough but I'm a developer I'm kind of curious is this something that I need to be worried about or is that something that's on the Ops probably is more Ops focused or is it both it's really both if you put the two tools together it's making everyone's life simpler right so we're doing the best debris to build up and create and publish an image and then we're doing the best of breed of being able to understand that your git repository is is a is is a source of Truth and so um you know being able to do a get Ops model and it declarative fashion and what's nice about this is if somebody comes in and makes changes inside the cluster Argo CD is going to see those changes realize that the configuration is not matching the source of Truth and it's going to change things it's going to update the what's running in the production cluster to ensure it matches the source of truth I got it so if I already have an existing deployment using tecton and I want to introduce Argo CD what are the steps involved what do I need to do so there's not much you need to do so we need to drop off the last step and this is really nice the last step would typically be using Cube control to then push your application into a kubernetes cluster and understand with with Cube control you're going to have to set some credentials and set up the security so that you know your automated system has the authority to publish into the kubernetes environment you don't have to do that you don't need to know Cube control and you don't have to set up those credentials because what Argo CD is going to do is it's not going to use Cube control it's going to look at what's in the repo and it's going to pull those configuration files and understand what it needs to deploy in the cluster now the one thing you have to look out for is Largo CD is you typically have two repos you've got the repo for the ammo files and the refo for the source code so the source code of my actual applications and then for the infrastructure I have a separate one as you're saying you've got a separate repo for the actual source code and a separate repo for those yaml files that control the deployment of your applications okay and so where are the payoffs for this and I've gone through this trouble how does it make my life easier so how it makes your life easier again you're not going to have to learn all those Cube control commands you're not gonna have to worry about that if somebody goes into the environment and make some changes Argo CDs gonna make sure that those changes are rolled back and the source of Truth oh you're saying for example like an operator goes and accidentally does something thinking they're going to fix it right that's right you can sleep well at night because if that operator who thinks they know what they're doing goes and makes some changes Argo CD is going to see that that's not what in the source of truth and that's really the best part of git Ops right is making sure your git repositories the source of Truth and so if it's not the source of Truth and they make some changes it's going to update what's running in your cluster to match what's in the git repo I'm all for sleeping better at night and with that we're going to go ahead and wrap we've now told you what it is why it's important how it works if you'd like to see more topics for Tech talk be sure and leave it down in the comments and please before you leave remember to subscribe and hit like